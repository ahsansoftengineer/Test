{"version":3,"file":"src_app_feature_allow-purpose_allow-purpose_module_ts.js","mappings":"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","sources":["./src/app/feature/allow-purpose/allow-purpose-routing.module.ts","./src/app/feature/allow-purpose/allow-purpose.component.ts","./src/app/feature/allow-purpose/allow-purpose.component.html","./src/app/feature/allow-purpose/allow-purpose.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ACTION } from 'src/app/enums/action.enum';\r\n\r\nimport { AllowPurposeComponent } from './allow-purpose.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AllowPurposeComponent,\r\n\r\n    data: {\r\n      title: \"Allow Purpose\",\r\n      permission: [\r\n        ACTION.ADD,\r\n        ACTION.EDIT,\r\n      ],\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AllowPurposeRoutingModule { }\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\nimport { TreeView } from 'src/app/class/base.form.treeview';\r\nimport { URLz } from 'src/app/enums/url.enum';\r\nimport { ChangeEvent } from 'src/app/interface/common/change-event';\r\nimport { TablePurposeComponent } from 'src/app/shared/components/dialogs/table-purpose/table-purpose.component';\r\n\r\n@Component({\r\n  selector: 'di-component-name-here',\r\n  templateUrl: './allow-purpose.component.html',\r\n  styleUrls: ['./allow-purpose.component.css'],\r\n})\r\nexport class AllowPurposeComponent extends TreeView implements OnInit {\r\n  constructor(public injector: Injector,\r\n    ) {\r\n    super(injector);\r\n    this.param.endpoint = URLz.ANALYSIS_PURPOSE_PERMISSION_TREE\r\n  }\r\n  treeViewdata: any;\r\n  _totalSelected = 2;\r\n  ngOnInit() {\r\n    this._component = 'Allow / Disallow Purpose'\r\n    this.initForm();\r\n    super.ngOnInit();\r\n    this.database.treeCases = 2\r\n  }\r\n  initForm() {\r\n    this._fs._form = this._fb.group({\r\n      purpose_id: [''],\r\n      donation_category: ['', this._vs._vals('Donation Category')],\r\n      donation_type_id: ['', this._vs._vals('Donation Type')],\r\n      fund_category_id: ['', this._vs._vals('Fund Category')],\r\n    });\r\n  }\r\n  purposeEvent(ce: ChangeEvent){\r\n    if(ce.event.isUserInput){\r\n      this._http.gets({\r\n        endpoint:  URLz.FUND_CATEGORY_PURPOSE,\r\n        query:{id: ce.id}\r\n      })\r\n        .subscribe(\r\n          (res) => {\r\n            this.openDialog(res.data.records, ce.id + ' - ' + ce.obj.title)\r\n          })\r\n    }\r\n\r\n  }\r\n  openDialog(data, title) {\r\n    const config: MatDialogConfig = {\r\n      panelClass: \"dialog-responsive\",\r\n      data:  {source: data, title}\r\n    }\r\n    const dialogRef = this._dialog.open(TablePurposeComponent, config);\r\n    dialogRef.afterClosed().subscribe();\r\n  }\r\n  applyClass = { 'col-md-3': false, 'col-md-4': false,\r\n  'col-lg-12': true, 'col-md-12': true,\r\n  'px-2': true};\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-12 col-lg-12\">\r\n    <div class=\"card card__styling\">\r\n      <div class=\"card-body custom__card__body__styling\">\r\n        <h2 class=\"card-title\">\r\n          {{'Allow / Disallow Purpose' | translate}}\r\n        </h2>\r\n        <hr style=\"border-top: 0px !important;\">\r\n        <div class=\"row card-body pt-0\">\r\n          <div class=\"row\">\r\n            <!-- Fields -->\r\n            <div class=\"col-md-4\">\r\n              <form [formGroup]=\"_fs._form\" (ngSubmit)=\"_onSubmity()\" autocomplete=\"off\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 pl-4 mb-2\">\r\n                    <h6>{{'Search Fund Category (C-5) Purpose' | translate}}</h6>\r\n                  </div>\r\n                  <di-ac\r\n                    field='purpose_id'\r\n                    lbl=\"Purpose\"\r\n                    [req]='false'\r\n                    [ngClass]=\"applyClass\"\r\n                    [url]=\"URLz.PURPOSE\"\r\n                    (changeEvent)='purposeEvent($event)'\r\n                  ></di-ac>\r\n                  <div class=\"col-md-12 pl-4 mt-3 mb-2\">\r\n                    <h6>{{'Fund Category Selection Criteria' | translate}}</h6>\r\n                  </div>\r\n                  <di-dd\r\n                    field='donation_category'\r\n                    lbl=\"Donation Category\"\r\n                    [url]=\"URLz.DEFAULT\"\r\n                    [load]=\"false\"\r\n                    [prelist]=\"_ss.DONATION_CATEGORY\"\r\n                    [ngClass]=\"applyClass\"\r\n                    [child]=\"donation_type_id\"\r\n                    #donation_category\r\n                  ></di-dd>\r\n                  <di-dd\r\n                    field='donation_type_id'\r\n                    lbl=\"Donation Type\"\r\n                    [url]=\"URLz.DONATION_T\"\r\n                    [load]=\"false\"\r\n                    [ngClass]=\"applyClass\"\r\n                    #donation_type_id\r\n                  ></di-dd>\r\n                  <di-ac\r\n                    field='fund_category_id'\r\n                    lbl=\"Fund Category\"\r\n                    [ngClass]=\"applyClass\"\r\n                    [url]=\"URLz.FUND_CATEGORY\"\r\n                  ></di-ac>\r\n                  <div class=\"col-md-12 text-center\">\r\n                    <button mat-raised-button (click)=\"_process()\" type=\"button\"\r\n                    [ngClass]=\"{'eng__font': _ss.lng === 'en', 'urdu__font' : _ss.lng === 'ur' }\"\r\n                    class=\"col-md-11 btn-info waves-effect waves-light\">\r\n                      {{ ( !loadingTree ? 'Process' : '' ) | translate }}\r\n                      <mat-icon *ngIf=\"loadingTree\">\r\n                        <mat-spinner class=\"warn\" diameter=\"20\"></mat-spinner>\r\n                      </mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <!-- Tree View -->\r\n            <div class=\"col-md-8\">\r\n              <div class=\"tree__view__scroll__and__class\">\r\n                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n                  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n                    <button mat-icon-button disabled></button>\r\n                    <!-- [disabled]=\"node.isLoading\" -->\r\n                    <mat-checkbox\r\n                      [checked]=\"checkSelection(node)\"\r\n                      (change)=\"leafSelected(node)\"\r\n                      class=\"checklist-leaf-node\"\r\n                      color=\"primary\">\r\n                      {{ node.title }}\r\n                    </mat-checkbox>\r\n                  </mat-tree-node>\r\n                  <mat-tree-node\r\n                    *matTreeNodeDef=\"let node; when: hasChild\"\r\n                    matTreeNodePadding>\r\n                    <button\r\n                      mat-icon-button\r\n                      matTreeNodeToggle\r\n                      [disabled]=\"_disabledNode(node) || node.isLoading\"\r\n                      [attr.aria-label]=\"'Analysis ' + node.id\">\r\n                      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n                        {{ treeControl.isExpanded(node) ?\r\n                        'expand_more' : 'chevron_right'}}\r\n                      </mat-icon>\r\n                    </button>\r\n                    <mat-checkbox color=\"primary\"\r\n                      [disabled]=\"node.isLoading\"\r\n                      [checked]=\"parentAll(node)\"\r\n                      [indeterminate]=\"parentPartially(node)\"\r\n                      (change)=\"itemToggle(node, true)\">\r\n                      {{ node.title }}\r\n                    </mat-checkbox>\r\n                    <mat-progress-bar *ngIf=\"node.isLoading\" mode=\"indeterminate\">\r\n                    </mat-progress-bar>\r\n                  </mat-tree-node>\r\n                </mat-tree>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- {{\r\n  node.id +\r\n  ' => Chk:' + node.checked +\r\n  ' Loading:' + node.isLoading +\r\n  ' Alo:' + node.allowed +\r\n  ' Tot:' + node.total +\r\n  ' Exp:' + node.expandable +\r\n  ' Lvl:' + node.level\r\n  }} -->\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AllowPurposeRoutingModule } from './allow-purpose-routing.module';\r\nimport { AllowPurposeComponent } from './allow-purpose.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AllowPurposeComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    AllowPurposeRoutingModule\r\n  ]\r\n})\r\nexport class AllowPurposeModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}